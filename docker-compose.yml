services:
  cassandra:
    image: cassandra:4.1.0
    container_name: cassandra
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - "CASSANDRA_CLUSTER_NAME=DVS"
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=password
    restart: always
    volumes:
      - ./out/cassandra_data:/var/lib/cassandra
    healthcheck:
      test:
        [
          "CMD",
          "cqlsh",
          "-u cassandra",
          "-p cassandra",
          "-e describe keyspaces",
        ]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - dvsnetwork

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:4.1.0
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./cassandra/init_keyspace.cql:/init_keyspace.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /init_keyspace.cql"
    networks:
      - dvsnetwork

  fastapi_app1:
    image: fastapi_app1
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      cassandra:
        condition: service_healthy
    container_name: ${SERVER_HOST_1}
    restart: always
    environment:
      SERVER_PORT: ${SERVER_PORT_1}
      CASSANDRA_HOST: cassandra
    volumes:
      - ./backend:/backend
    networks:
      - dvsnetwork

  fastapi_app2:
    image: fastapi_app2
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      cassandra:
        condition: service_healthy
    container_name: ${SERVER_HOST_2}
    restart: always
    environment:
      SERVER_PORT: ${SERVER_PORT_2}
      CASSANDRA_HOST: cassandra
    volumes:
      - ./backend:/backend
    networks:
      - dvsnetwork

  fastapi_app3:
    image: fastapi_app3
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      cassandra:
        condition: service_healthy
    container_name: ${SERVER_HOST_3}
    restart: always
    environment:
      SERVER_PORT: ${SERVER_PORT_3}
      CASSANDRA_HOST: cassandra
    volumes:
      - ./backend:/backend
    networks:
      - dvsnetwork

  react:
    image: react-app
    build:
      context: ./react-app
      dockerfile: Dockerfile
    container_name: dvsreact
    restart: always
    ports:
      - 3000:3000
    networks:
      - dvsnetwork

  nginx:
    image: nginx
    container_name: dvsnginx
    restart: always
    env_file: .env
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    volumes:
      - "./nginx/default.conf.template:/etc/nginx/templates/default.conf.template"
    depends_on:
      - fastapi_app1
      - fastapi_app2
      - fastapi_app3
    networks:
      - dvsnetwork

networks:
  dvsnetwork:
    driver: bridge
